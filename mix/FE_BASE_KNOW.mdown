
前端知识储备（专注分享二十年）
==============================

*** 本文所涵盖的体系不包括某个库的使用以及某个框架的具体使用 ***

## Common 通用知识（子知识点部分有所交集）

1. 项目编码前
	技术调研以及选型（是否使用框架、框架的选择等）

2. 项目进行期间
	- 环境准备 prepare
	- 迭代过程
		1. 开发 dev
			1. 页面设计（PS的使用 | 设计思维 | 考虑数据交互）
			2. 静态页面开发阶段（HTML | CSS | JSTL | EL | 考虑数据交互 | H5 | C3）
			3. 逻辑脚本代码（模块化 | 组件化 | UI组件库的使用 | 数据交互 | 脚本代码的编写能力 | ES5 | ES6 | ES7）
				- OO基础以及JS的OO
				- 异步编程的处理方法
			4. 调试代码的能力
		2. 发布 dist
			- 构建工具的选择以及使用
			- 自动化构建的建立

## Advanced

- 效率（代码的执行效率-----解释型和编译型的区别以及代码性能优化策略） **
- 内存（对于每个V8实例的内存管理和前后端内存使用策略上的区别）
- DB（数据库不仅是应用于后端，在前端也是有使用的）
- 协议（FTP HTTP1.0/1.1/2 WebSocket等）**
- OO | OOD（面向对象的概念、特征、深入理解、以及面向对象设计） **
- DS | Algor（数据结构和算法的基础以及部分高阶知识） **
- 设计模式（单例模式、工厂模式、观察者模式等） **

***

** 最后标注`\*\*`的均为 我认为老大来讲比较合适的部分 **

##### 关于Bash上提示符的显示设置

` export $PS1="\s-\V \u@\h \w\n\$ " `

显示效果  
```
bash-4.3.42 admin@admin-PC ~/Desktop
$ 
```
